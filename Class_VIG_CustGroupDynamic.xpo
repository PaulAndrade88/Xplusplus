Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: CLS

; Microsoft Dynamics AX Class: VIG_CustGroupDynamic unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #VIG_CustGroupDynamic
    PROPERTIES
      Name                #VIG_CustGroupDynamic
      Origin              #{C6AE6A3C-EFE2-4BCC-9F9F-A14BD90497DD}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #class VIG_CustGroupDynamic
        #{
        #}
      ENDSOURCE
      SOURCE #main
        #static void main(Args _args)
        #{
        #    DictTable                       dictTable;
        #    Form                            form;
        #    FormBuildDesign                 desing;
        #    FormBuildDataSource             ds;
        #    FormBuildActionPaneControl      actionPane;
        #    FormBuildActionPaneTabControl   actionPaneTab;
        #    FormBuildButtonGroupControl     btngrp1;
        #    FormBuildButtonGroupControl     btngrp2;
        #    FormBuildCommandButtonControl   cmdNew;
        #    FormBuildCommandButtonControl   cmdDel;
        #    FormBuildMenuButtonControl      mbPosting;
        #    FormBuildFunctionButtonControl  mibPosting;
        #    FormBuildFunctionButtonControl  mibForecast;
        #    FormBuildGridControl            grid;
        #    FormBuildGridControl            grpBody;
        #    Args                            args;
        #    FormRun                         formRun;
        #    #Task
        #
        #    dictTable = new DictTable(tableNum(CustGroup));
        #
        #    form = new form();
        #    form.name("CustGroupDynamic");
        #
        #    ds = form.addDataSource(dictTable.name());
        #    ds.table(dictTable.id());
        #
        #    desing = form.addDesign('Design');
        #    desing.caption("Customer groups");
        #    desing.style(FormStyle::SimpleList);
        #    desing.titleDatasource(ds.id());
        #
        #    actionPane = desing.addControl(
        #        FormControlType::ActionPane, 'ActionPane');
        #    actionPane.style(ActionPaneStyle::Strip);
        #    actionPaneTab = actionPane.addControl(
        #        FormControlType::ActionPaneTab, 'ActionPaneTab');
        #
        #    btngrp1 = actionPaneTab.addControl(
        #        FormControlType::ButtonGroup, 'NewDeleteGroup');
        #    btngrp2 = actionPaneTab.addControl(
        #        FormControlType::ButtonGroup, 'ButtonGroup');
        #
        #    cmdNew = btngrp1.addControl(
        #        FormControlType::CommandButton, 'NewButton');
        #    cmdNew.buttonDisplay(FormButtonDisplay::TextAndImageLeft);
        #    cmdNew.normalImage('11045');
        #    cmdNew.imageLocation(SysImageLocation::EmbeddedResource);
        #    cmdNew.primary(NoYes::Yes);
        #    cmdNew.command(#taskNew);
        #
        #    cmdDel = btngrp1.addControl(
        #        FormControlType::CommandButton, 'NewButton');
        #    cmdDel.text("Delete");
        #    cmdDel.ButtonDisplay(FormButtonDisplay::TextAndImageLeft);
        #    cmdDel.normalImage('10121');
        #    cmdDel.imageLocation(SysImageLocation::EmbeddedResource);
        #    cmdDel.saveRecord(NoYes::Yes);
        #    cmdDel.primary(NoYes::Yes);
        #    cmdDel.command(#taskDeleteRecord);
        #
        #    mbPosting = btngrp2.addControl(
        #        FormControlType::MenuButton, 'MenuButtonPosting');
        #    mbPosting.helpText("Set up related data for the group.");
        #    mbPosting.text("Setup");
        #
        #    mibPosting = btngrp2.addControl(
        #        FormControlType::MenuFunctionButton, 'Posting');
        #    mibPosting.text('Item posting');
        #    mibPosting.saverecord(NoYes::No);
        #    mibPosting.dataSource(ds.id());
        #    mibPosting.menuItemName(menuitemDisplayStr(InventPosting));
        #
        #    mibForecast = btngrp2.addControl(
        #        FormControlType::MenuFunctionButton, 'SalesForecast');
        #    mibForecast.text('Forecast');
        #    mibForecast.saveRecord(NoYes::No);
        #    mibForecast.menuItemName(
        #        menuitemDisplayStr(ForecastSalesGroup));
        #
        #    grpBody = desing.addControl(FormControlType::Group, 'Body');
        #    grpBody.heightMode(FormHeight::ColumnHeight);
        #    //grpBody.columnspace(0);
        #    grpBody.style(GroupStyle::BorderlessGridContainer);
        #
        #    grid = grpBody.addControl(FormControlType::Grid, "Grid");
        #    grid.datasource(ds.name());
        #    grid.showRowLabels(false);
        #    grid.widthMode(FormWidth::ColumnWidth);
        #    grid.heightMode(FormHeight::ColumnHeight);
        #
        #    grid.addDataField(
        #        ds.id(), fieldNum(CustGroup, CustGroup));
        #
        #    grid.addDataField(
        #        ds.id(), fieldNum(CustGroup, Name));
        #
        #    grid.addDataField(
        #        ds.id(), fieldNum(CustGroup, PaymTermId));
        #
        #    grid.addDataField(
        #        ds.id(), fieldNum(CustGroup,ClearingPeriod));
        #
        #    grid.addDataField(
        #        ds.id(), fieldNum(CustGroup,BankCustPaymIdTable));
        #
        #    grid.addDataField(
        #        ds.id(), fieldNum(CustGroup, TaxGroupId));
        #
        #    args = new args();
        #    args.object(form);
        #
        #    formRun = classFactory.formRunClass(args);
        #    formRun.init();
        #    formRun.run();
        #
        #    formRun.detach();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: END
